{
    // Place your 全局 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
    // description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
    // is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
    // used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
    // $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
    // Placeholders with the same ids are connected.
    // Example:
    // "Print to console": {
    //     "scope": "javascript,typescript",
    //     "prefix": "log",
    //     "body": [
    //         "console.log('$1');",
    //         "$2"
    //     ],
    //     "description": "Log output to console"
    // }
    "init latexmkrc": {
        // "scope": "javascript,typescript",
        "prefix": "latexmkrc",
        "body": [
            "add_cus_dep( 'tex', 'aux', 0, 'makeexternaldocument' );",
            "",
            "sub makeexternaldocument {",
            "    # if the dependency isn't one of the files that this latexmk run will consider, process it",
            "    # without this test, we would get an infinite loop!",
            "    if (!(\\$root_filename eq \\$_[0]))",
            "    {   # PLEASE ENABLE ONLY ONE OF THE FOLLOWING",
            "        # DEPENDING ON THE ENGINE YOU'RE USING",
            "",
            "        # FOR PDFLATEX",
            "        system( \"latexmk -pdf \\\"\\$_[0]\\\"\" );",
            "",
            "        # FOR LATEX+DVIPDF",
            "        # system( \"latexmk \\\"\\$_[0]\\\"\" );",
            "",
            "        # FOR XELATEX",
            "        # system( \"latexmk -xelatex \\\"\\$_[0]\\\"\" );",
            "",
            "        # FOR LUALATEX",
            "        # system( \"latexmk -lualatex \\\"\\$_[0]\\\"\" );",
            "    }",
            "}"
        ],
        "description": "Log output to console"
    }
}
