{"ref":"473d14b7-84bd-4b58-a2a3-544435c1a7c5","syncData":{"version":2,"machineId":"4efb8e68-3d88-4217-8637-b7d296761a47","content":"{\"mac\":\"// 将键绑定放在此文件中以覆盖默认值\\n[\\n    // ----------------------------------------------------------------------------------------------\\n    // 终端窗口\\n    // ----------------------------------------------------------------------------------------------\\n    // ----- 外部终端\\n    // 本地文件夹在vscode打开后，在这个文件夹的路径开外部终端：ctrl+shift+`\\n    { \\\"key\\\": \\\"ctrl+shift+[Backquote]\\\", \\\"command\\\": \\\"workbench.action.terminal.openNativeConsole\\\", \\\"when\\\": \\\"!terminalFocus\\\" },\\n    { \\\"key\\\": \\\"shift+cmd+c\\\",  \\\"command\\\": \\\"-workbench.action.terminal.openNativeConsole\\\",  \\\"when\\\": \\\"!terminalFocus\\\" },\\n\\n    // ----- 内部终端\\n\\n\\n    // 在代码和终端间切换\\n    { \\\"key\\\": \\\"ctrl+[Backquote]\\\", \\\"command\\\": \\\"workbench.action.terminal.focus\\\"},\\n    { \\\"key\\\": \\\"ctrl+[Backquote]\\\", \\\"command\\\": \\\"workbench.action.focusActiveEditorGroup\\\", \\\"when\\\": \\\"terminalFocus\\\"},\\n    // 打开、隐藏内置终端\\n    { \\\"key\\\": \\\"ctrl+alt+[Backquote]\\\",  \\\"command\\\": \\\"workbench.action.togglePanel\\\" },\\n    // { \\\"key\\\": \\\"ctrl+alt+`\\\",  \\\"command\\\": \\\"multiCommand.toggleTerminal\\\" },\\n    // 关闭当前终端\\n    { \\\"key\\\": \\\"cmd+w\\\",\\\"command\\\": \\\"workbench.action.terminal.kill\\\", \\\"when\\\": \\\"terminalFocus\\\"},\\n    // 最大化、复原 终端\\n    { \\\"key\\\": \\\"shift+cmd+enter\\\",    \\\"command\\\": \\\"workbench.action.toggleMaximizedPanel\\\", \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 新开一屏终端：ctrl+alt+t\\n    { \\\"key\\\": \\\"cmd+t\\\",      \\\"command\\\": \\\"workbench.action.terminal.new\\\"  , \\\"when\\\": \\\"terminalFocus\\\"  },\\n    { \\\"key\\\": \\\"ctrl+shift+[Backquote]\\\",    \\\"command\\\": \\\"-workbench.action.terminal.new\\\"  },  //( 解绑原生的 ctrl+shift+`）\\n    // 去前一屏终端（终端编号-1）\\n    { \\\"key\\\": \\\"cmd+alt+up\\\",    \\\"command\\\": \\\"workbench.action.terminal.focusPrevious\\\", \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 去后一屏终端（终端编号+1）\\n    { \\\"key\\\": \\\"cmd+alt+down\\\",    \\\"command\\\": \\\"workbench.action.terminal.focusNext\\\" , \\\"when\\\": \\\"terminalFocus\\\"},\\n    // 去左一窗终端\\n    // { \\\"key\\\": \\\"cmd+alt+left\\\",    \\\"command\\\": \\\"workbench.action.terminal.focusPreviousPane\\\", \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 去右一窗终端\\n    // { \\\"key\\\": \\\"cmd+alt+right\\\",    \\\"command\\\": \\\"workbench.action.terminal.focusNextPane\\\", \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 终端左右分窗: cmd+\\\\\\n    // 终端上下分窗：vscode不支持\\n\\n    // 终端下(含vim)的键盘映射：完全仿照我的iterm2的设置\\n    // https://code.visualstudio.com/docs/editor/integrated-terminal#_send-text-from-a-keybinding\\n    // 参见https://github.com/xtermjs/xterm.js/blob/0e45909c7e79c83452493d2cd46d99c0a0bb585f/src/common/data/EscapeSequences.ts#L31\\n    // 左移一词：alt+left\\n    { \\\"key\\\": \\\"alt+left\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001bb\\\" }, \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 右移一词：alt+right\\n    { \\\"key\\\": \\\"alt+right\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001bf\\\" }, \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 移动到行首：shift+alt+left  or  cmd+left\\n    { \\\"key\\\": \\\"cmd+left\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001b[H\\\" }, \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 移动到行尾：shift+alt+right or  cmd+right\\n    { \\\"key\\\": \\\"cmd+right\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001b[F\\\" }, \\\"when\\\": \\\"terminalFocus\\\" },\\n    // 左删一词：alt+backspace\\n    { \\\"key\\\": \\\"alt+backspace\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001b\\\\u007f\\\" },  \\\"when\\\": \\\"terminalFocus\\\"  },\\n    // 右删一词：alt+delete\\n    { \\\"key\\\": \\\"alt+delete\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u001bd\\\" },  \\\"when\\\": \\\"terminalFocus\\\"  },\\n    // 删除到行首：shift+alt+backspace or cmd+backspace\\n    { \\\"key\\\": \\\"cmd+backspace\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u0015\\\" },  \\\"when\\\": \\\"terminalFocus\\\"  },\\n    // 删除到行尾：shift+alt+delete    or cmd+delete\\n    { \\\"key\\\": \\\"cmd+delete\\\",   \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u000b\\\" },  \\\"when\\\": \\\"terminalFocus\\\"  },\\n    // 删除整行： shift+backspace\\n    { \\\"key\\\": \\\"shift+backspace\\\", \\\"command\\\": \\\"workbench.action.terminal.sendSequence\\\", \\\"args\\\": { \\\"text\\\": \\\"\\\\u0005\\\\u0015\\\" }, \\\"when\\\": \\\"terminalFocus\\\" },\\n\\n    // ----------------------------------------------------------------------------------------------\\n    // 编辑窗口\\n    // ----------------------------------------------------------------------------------------------\\n\\n    // 代码折叠\\n    // Command + option + [  // 折叠一层 光标所在代码块\\n    // Command + option + ]  // 展开一层 光标所在代码块\\n    // command + k + 0，折叠所有代码块  0是代码折叠级别，同理可以换用1，2，3 等\\n    // command + k + j，展开所有代码块。\\n\\n    // 非注释的 左右 大中小括号 之间跳转： ctrl + \\\\\\n    { \\\"key\\\": \\\"ctrl+[Backslash]\\\", \\\"command\\\": \\\"editor.action.jumpToBracket\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n\\n\\n    // alt+z  光标退回  可以是选区, 当前文件内 两步编辑之间\\n    // { \\\"key\\\": \\\"alt+z\\\", \\\"command\\\": \\\"cursorUndo\\\", \\\"when\\\": \\\"textInputFocus\\\" },\\n    // { \\\"key\\\": \\\"cmd+u\\\", \\\"command\\\": \\\"-cursorUndo\\\", \\\"when\\\": \\\"textInputFocus\\\" },\\n    // // shift+alt+z 光标前进  可以是选区, 当前文件内 两步编辑之间\\n    // { \\\"key\\\": \\\"shift+alt+z\\\", \\\"command\\\": \\\"cursorRedo\\\" },\\n\\n\\n\\n\\n    // 跨越自动换行\\n    // home(fn+左) 移动到当前显示行的行首\\n    {\\\"key\\\": \\\"home\\\",\\\"command\\\": \\\"cursorLineStart\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    {\\\"key\\\": \\\"ctrl+a\\\",\\\"command\\\": \\\"-cursorLineStart\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    // end(fn+右) 移动到当前显示行的行尾\\n    {\\\"key\\\": \\\"end\\\",\\\"command\\\": \\\"cursorLineEnd\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    {\\\"key\\\": \\\"ctrl+e\\\",\\\"command\\\": \\\"-cursorLineEnd\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    // ctrl+shift+左 选中到当前显示行的行首 // 因为home是功能键，不能再用shift修饰，故无法设置成shift+home\\n    {\\\"key\\\": \\\"shift+ctrl+left\\\",\\\"command\\\": \\\"cursorLineStartSelect\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    {\\\"key\\\": \\\"ctrl+shift+a\\\",\\\"command\\\": \\\"-cursorLineStartSelect\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    // ctrl+shift+右 选中到当前显示行的行尾 // 因为end是功能键，不能再用shift修饰，故无法设置成shift+end\\n    {\\\"key\\\": \\\"shift+ctrl+right\\\",\\\"command\\\": \\\"cursorLineEndSelect\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n    {\\\"key\\\": \\\"ctrl+shift+e\\\",\\\"command\\\": \\\"-cursorLineEndSelect\\\",\\\"when\\\": \\\"textInputFocus\\\"    },\\n\\n    // 不跨越自动换行\\n    // cmd+left   移动到当前文本行的行首，再按跨行移动到上一行，直到到达一开始的文本行的行首（在缩进的右侧），再按一次到缩进的左侧，再按一次到缩进的右侧，如此不断循环\\n    // cmd+right  移动到当前文本行的行尾\\n    // shift+cmd+left    选中到当前文本行的行首，同cmd+left\\n    // shift+cmd+right    选中到当前文本行的行尾\\n\\n    // cmd+up    移动到当前文件的第一行\\n    // cmd+down  移动到当前文件的最后一行\\n\\n    // alt+z: 跨文件 光标退回 可以是选区, 跨文件 跨若干步编辑\\n    { \\\"key\\\": \\\"alt+z\\\", \\\"command\\\": \\\"-editor.action.toggleWordWrap\\\" },\\n    { \\\"key\\\": \\\"alt+z\\\", \\\"command\\\": \\\"workbench.action.navigateBack\\\" },\\n    { \\\"key\\\": \\\"ctrl+-\\\", \\\"command\\\": \\\"-workbench.action.navigateBack\\\" },\\n    { \\\"key\\\": \\\"alt+z\\\", \\\"command\\\": \\\"workbench.action.quickInputBack\\\", \\\"when\\\": \\\"inQuickOpen\\\" },\\n    { \\\"key\\\": \\\"ctrl+-\\\", \\\"command\\\": \\\"-workbench.action.quickInputBack\\\", \\\"when\\\": \\\"inQuickOpen\\\" },\\n    // shfit+alt+z : 跨文件 光标前进 可以是选区, 跨文件 跨若干步编辑\\n    { \\\"key\\\": \\\"alt+shift+z\\\", \\\"command\\\": \\\"workbench.action.navigateForward\\\" },\\n    { \\\"key\\\": \\\"ctrl+shift+-\\\",  \\\"command\\\": \\\"-workbench.action.navigateForward\\\" },\\n\\n\\n    // 代码左右: cmd+\\\\\\n    // 上下分窗: shift+cmd+\\\\\\n    { \\\"key\\\": \\\"shift+cmd+[Backslash]\\\", \\\"command\\\": \\\"workbench.action.splitEditorOrthogonal\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n    { \\\"key\\\": \\\"shift+cmd+[Backslash]\\\", \\\"command\\\": \\\"-editor.action.jumpToBracket\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n    // 最大化当前窗口\\n    { \\\"key\\\": \\\"shift+cmd+enter\\\", \\\"command\\\": \\\"workbench.action.toggleEditorWidths\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n\\n    // cmd+c 复制一行, 不带行尾换行符, 依赖于'macros'插件terminalFocus; 之后 cmd+v 则粘贴插入到光标所在处\\n    { \\\"key\\\": \\\"cmd+c\\\", \\\"command\\\": \\\"macros.copyWithoutNewLine\\\", \\\"when\\\": \\\"editorTextFocus && !editorHasSelection\\\" },\\n    // alt+c 复制一行, 带行尾换行符; 之后 cmd+v 则粘贴到光标上一行\\n    { \\\"key\\\": \\\"alt+c\\\", \\\"command\\\": \\\"editor.action.clipboardCopyAction\\\", \\\"when\\\": \\\"editorTextFocus && !editorHasSelection\\\" },\\n    { \\\"key\\\": \\\"cmd+c\\\", \\\"command\\\": \\\"-editor.action.clipboardCopyAction\\\", \\\"when\\\": \\\"editorTextFocus && !editorHasSelection\\\" },\\n    // 选择一行, 不带行尾换行符, 依赖于'macros'插件terminalFocus\\n    { \\\"key\\\": \\\"cmd+l\\\", \\\"command\\\": \\\"macros.selectWithoutNewLine\\\", \\\"when\\\": \\\"editorTextFocus && !editorHasSelection\\\" },\\n    { \\\"key\\\": \\\"cmd+l\\\", \\\"command\\\": \\\"-expandLineSelection\\\", \\\"when\\\": \\\"textInputFocus\\\" },\\n\\n    // 删除整行： shift+backspace\\n    { \\\"key\\\":  \\\"shift+backspace\\\",  \\\"command\\\": \\\"editor.action.deleteLines\\\",  \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\" },\\n    { \\\"key\\\": \\\"shift+cmd+k\\\", \\\"command\\\": \\\"-editor.action.deleteLines\\\", \\\"when\\\": \\\"textInputFocus && !editorReadonly\\\" },\\n\\n\\n    // 多选区、多光标功能：\\n        // alt+cmd+C/W/R：  开关Case sensitive/whole word/RegEx\\n\\n        // 选中一个区域再cmd+d：非整词匹配\\n        // 光标在一个词中未选中一片区域，直接cmd+d：整词匹配\\n        // 选中下一个和当前一样的：cmd+d\\n\\n        // 各功能同上, 但选中[前]一个和当前一样的：cmd+K cmd+d\\n        { \\\"key\\\": \\\"cmd+k cmd+d\\\", \\\"command\\\": \\\"editor.action.addSelectionToPreviousFindMatch\\\" ,\\\"when\\\": \\\"editorFocus\\\" },\\n\\n        // ctrl+d 取消当前选区, 去往下一选区\\n        { \\\"key\\\": \\\"ctrl+d\\\", \\\"command\\\": \\\"editor.action.moveSelectionToNextFindMatch\\\", \\\"when\\\": \\\"editorFocus\\\" },\\n        { \\\"key\\\": \\\"cmd+k cmd+d\\\", \\\"command\\\": \\\"-editor.action.moveSelectionToNextFindMatch\\\", \\\"when\\\": \\\"editorFocus\\\" },\\n        // shift+ctrl+d 取消当前选区, 回到上一选区\\n        { \\\"key\\\": \\\"shift+ctrl+d\\\", \\\"command\\\": \\\"cursorUndo\\\", \\\"when\\\": \\\"textInputFocus\\\" },\\n\\n        // shift+cmd+d: 选中所有和当前一样的\\n        { \\\"key\\\": \\\"shift+cmd+d\\\",    \\\"command\\\": \\\"editor.action.selectHighlights\\\", \\\"when\\\": \\\"editorFocus\\\" },\\n\\n        // 新增一个选区：按住alt，用鼠标选中区域\\n        // 新加一个光标：按住alt点鼠标左键\\n\\n        // 已经选中一/多个选区:\\n            // alt+shitf+鼠标左键: 现有选区每一行末尾, 转换为多光标(无选区)\\n            // cmd+l 所有选区转换行尾处 转换为多光标\\n            { \\\"key\\\": \\\"cmd+shift+l\\\", \\\"command\\\": \\\"editor.action.insertCursorAtEndOfEachLineSelected\\\", \\\"when\\\": \\\"editorTextFocus  && editorHasSelection\\\" },\\n            { \\\"key\\\": \\\"cmd+shift+l\\\", \\\"command\\\": \\\"-editor.action.selectHighlights\\\", \\\"when\\\": \\\"editorFocus\\\" },\\n            { \\\"key\\\": \\\"shift+alt+i\\\", \\\"command\\\": \\\"-editor.action.insertCursorAtEndOfEachLineSelected\\\", \\\"when\\\": \\\"editorTextFocus\\\" },\\n        // 不论有木有未选中区域,  alt+shitf+鼠标选中区域: 取消之前的选中, 将此次鼠标选区每一行转换为多光标(无选区)\\n\\n        // 上/下行加一个光标：alt+cmd+上/下, 若有行长度不到这列, 仍增加新光标于行尾\\n\\n    // 列选择: 选择多行的数列, 若有行长度不到这列, 则跳过此行不选\\n        // shift+alt+左/右: 开启列选择, 水平移动光标以扩大选区\\n        // shift+alt+左/右: 开启列选择, 上下添加光标\\n        // 左/右: 列选择变成多光标, 光标就在各行选区的尾巴\\n\\n    // shift+cmd+[ / ] : 左/右一个标签页\\n    // shift+ctrl+右: 智能缩小选区\\n    // shift+ctrl+左: 智能扩大选区\\n\\n\\n    // ----------------------------------------------------------------------------------------------\\n    // 编辑窗口\\n    // ----------------------------------------------------------------------------------------------\\n    // 调试 （[t]iaoshi）\\n    { \\\"key\\\": \\\"shift+alt+cmd+t\\\",    \\\"command\\\": \\\"workbench.view.debug\\\"},\\n    // 打开最近关闭的文件（[l]ast）\\n    { \\\"key\\\": \\\"shift+alt+cmd+l\\\",  \\\"command\\\": \\\"workbench.action.reopenClosedEditor\\\" },\\n\\n\\n    // ----------------------------------------------------------------------------------------------\\n    // remote developement\\n    // ----------------------------------------------------------------------------------------------\\n    // 当远程服务器断开连接时, 按cmd+r来重新连接当前window到远程服务器\\n    { \\\"key\\\": \\\"cmd+r\\\", \\\"command\\\": \\\"workbench.action.reloadWindow\\\" },\\n    { \\\"key\\\": \\\"cmd+r\\\", \\\"command\\\": \\\"-workbench.action.reloadWindow\\\", \\\"when\\\": \\\"isDevelopment\\\" },\\n    // 在新窗口连接到远程服务器： fn+r\\n    { \\\"key\\\": \\\"ctrl+shift+alt+r\\\", \\\"command\\\": \\\"opensshremotes.openEmptyWindow\\\" },\\n\\n    // ----------------------------------------------------------------------------------------------\\n    // latex workshop\\n    // ----------------------------------------------------------------------------------------------\\n    // alt+cmd+V : open pdf viewer\\n    // alt+cmd+shitf+B : Build with a recipe to select\\n    // alt+cmd+B : Build with the last used recipe\\n    // alt+cmd+C : clean auxiliary files\\n    // alt+cmd+Q : stop building\\n    // alt+cmd+J : code jump to pdf\\n    // cmd+single fingre click: pdf jump to code\\n    {  \\\"key\\\": \\\"cmd+alt+shift+b\\\", \\\"command\\\": \\\"latex-workshop.recipes\\\" },\\n    { \\\"key\\\": \\\"alt+cmd+q\\\", \\\"command\\\": \\\"latex-workshop.kill\\\" },\\n\\n    // alt+cmd+0/1/2/3 选中文本放进chapter、section、subsection、subsubsection环境\\n    { \\\"key\\\": \\\"alt+cmd+0\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\chapter{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+1\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\section{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+2\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\subsection{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+3\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\subsubsection{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+p\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\paragraph{${TM_SELECTED_TEXT}$1}\\\" } },\\n\\n    // cmd+b/i/u 选中文本放进加粗/斜体/下横线环境\\n    { \\\"key\\\": \\\"cmd+b\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\textbf{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"cmd+i\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\textit{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"cmd+u\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\underline{${TM_SELECTED_TEXT}$1}\\\" } },\\n\\n    { \\\"key\\\": \\\"alt+cmd+y\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\cite{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+r\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\ref{${TM_SELECTED_TEXT}$1}\\\" } },\\n    { \\\"key\\\": \\\"alt+cmd+e\\\", \\\"command\\\": \\\"editor.action.insertSnippet\\\", \\\"when\\\": \\\"editorTextFocus && editorLangId == latex\\\", \\\"args\\\": { \\\"snippet\\\": \\\"\\\\\\\\eqref{${TM_SELECTED_TEXT}$1}\\\" } },\\n    // --------------------------------------------------------------------------\\n    // Markdown all in one 插件的快捷键\\n    // 删除线：给选中区域添加/去除删除线\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"markdown.extension.editing.toggleStrikethrough\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+s\\\",\\n        \\\"command\\\": \\\"-markdown.extension.editing.toggleStrikethrough\\\",\\n        \\\"when\\\": \\\"false\\\"\\n    },\\n\\n\\n    // 行内代码：将选中文本添加/解除格式\\n    {\\n        \\\"key\\\": \\\"ctrl+c\\\",\\n        \\\"command\\\": \\\"markdown.extension.editing.toggleCodeSpan\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // 插入链接\\n    {\\n        \\\"key\\\": \\\"ctrl+k\\\",\\n        \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\n        \\\"args\\\": { \\\"name\\\": \\\"Insert link\\\"},\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // quote\\n    {\\n        \\\"key\\\": \\\"cmd+alt+q\\\",\\n        \\\"command\\\": \\\"macros.markdownQuoteSelectedLines\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // task list：只能将选中/光标所在行变成task list，但不能去除task list格式\\n    {\\n        \\\"key\\\": \\\"cmd+alt+x\\\",\\n        \\\"command\\\": \\\"macros.markdownInsertTaskListSelectedLines\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // 勾选/勾除 task list：支持多行同时操作\\n    {\\n        \\\"key\\\": \\\"ctrl+x\\\",\\n        \\\"command\\\": \\\"markdown.extension.checkTaskList\\\",\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    {\\n        \\\"key\\\": \\\"alt+c\\\",\\n        \\\"command\\\": \\\"-markdown.extension.checkTaskList\\\",\\n        \\\"when\\\": \\\"false\\\"\\n    },\\n    // 插入代码块：只能添加格式，不能去除格式，支持下拉框选择编程语言\\n    {\\n        \\\"key\\\": \\\"alt+cmd+c\\\",\\n        \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\n        \\\"args\\\": { \\\"name\\\": \\\"Insert fenced code block\\\"},\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // 插入代码块：只能添加格式，不能去除格式，不支持下拉框选择编程语言\\n    // {\\n    //     \\\"key\\\": \\\"alt+cmd+c\\\",\\n    //     \\\"command\\\": \\\"markdown.extension.editing.toggleCodeBlock\\\",\\n    //     \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    // },\\n\\n    // 公式块：只能添加格式，不能去除格式，支持下拉框选择编程语言，可以将选中文本变成公式块\\n    {\\n        \\\"key\\\": \\\"alt+cmd+b\\\",\\n        \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\n        \\\"args\\\": { \\\"name\\\": \\\"Insert fenced math\\\"},\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // 插入行内公式：只能添加格式，不能去除格式，可以将选中文本行内公式\\n    {\\n        \\\"key\\\": \\\"ctrl+m\\\",\\n        \\\"command\\\": \\\"editor.action.insertSnippet\\\",\\n        \\\"args\\\": { \\\"name\\\": \\\"Insert inline math\\\"},\\n        \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    },\\n    // 打开/关闭markdown预览： cmd+k v\\n    {\\n        \\\"key\\\": \\\"shift+cmd+v\\\",\\n        \\\"command\\\": \\\"-markdown.extension.closePreview\\\",\\n        \\\"when\\\": \\\"activeWebviewPanelId == 'markdown.preview'\\\"\\n    },\\n\\n    // 插入公式：按一下是行内公式，再按一下是居中公式块，再按一下是左对齐公式块，再按一下取消格式；不支持将选中文本变成/取消公式格式；\\n    // {\\n    //     \\\"key\\\": \\\"cmd+m\\\",\\n    //     \\\"command\\\": \\\"markdown.extension.editing.toggleMath\\\",\\n    //     \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    // },\\n    // 插入式块：按一下是左对齐公式块，再按一下是居中公式块，再按一下是行内公式，，再按一下取消格式；不支持将选中文本变成/取消公式格式；\\n    // {\\n    //     \\\"key\\\": \\\"alt+cmd+m\\\",\\n    //     \\\"command\\\": \\\"markdown.extension.editing.toggleMathReverse\\\",\\n    //     \\\"when\\\": \\\"editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/\\\"\\n    // },\\n\\n    // 自动补全\\n    // {\\n    //     \\\"key\\\": \\\"cmd+down\\\",\\n    //     \\\"command\\\": \\\"editor.action.inlineSuggest.acceptNextLine\\\",\\n    //     \\\"when\\\": \\\"inlineSuggestionVisible\\\"\\n    // },\\n    // {\\n    //     \\\"key\\\": \\\"ctrl+down\\\",\\n    //     \\\"command\\\": \\\"-editor.action.inlineSuggest.acceptNextLine\\\",\\n    //     \\\"when\\\": \\\"inlineSuggestionVisible\\\"\\n    // },\\n    // {\\n    //     \\\"key\\\": \\\"alt+cmd+right\\\",\\n    //     \\\"command\\\": \\\"editor.action.inlineSuggest.acceptNextWord\\\",\\n    //     \\\"when\\\": \\\"inlineSuggestionVisible\\\"\\n    // },\\n    // {\\n    //     \\\"key\\\": \\\"cmd+right\\\",\\n    //     \\\"command\\\": \\\"-editor.action.inlineSuggest.acceptNextWord\\\",\\n    //     \\\"when\\\": \\\"inlineSuggestionVisible\\\"\\n    // },\\n]\"}"}}