// 将键绑定放在此文件中以覆盖默认值
[
    // ----------------------------------------------------------------------------------------------
    // 终端窗口
    // ----------------------------------------------------------------------------------------------
    // ----- 外部终端
    // 本地文件夹在vscode打开后，在这个文件夹的路径开外部终端：ctrl+shift+`
    { "key": "ctrl+shift+`", "command": "workbench.action.terminal.openNativeConsole", "when": "!terminalFocus" },
    { "key": "shift+cmd+c",  "command": "-workbench.action.terminal.openNativeConsole",  "when": "!terminalFocus" },

    // ----- 内部终端


    // 在代码和终端间切换
    { "key": "ctrl+`", "command": "workbench.action.terminal.focus"},
    { "key": "ctrl+`", "command": "workbench.action.focusActiveEditorGroup", "when": "terminalFocus"},
    // 打开、隐藏内置终端
    { "key": "ctrl+alt+`",  "command": "workbench.action.togglePanel" },
    // { "key": "ctrl+alt+`",  "command": "multiCommand.toggleTerminal" },
    // 关闭当前终端
    { "key": "cmd+w","command": "workbench.action.terminal.kill", "when": "terminalFocus"},
    // 最大化、复原 终端
    { "key": "shift+cmd+enter",    "command": "workbench.action.toggleMaximizedPanel", "when": "terminalFocus" },
    // 新开一屏终端：ctrl+alt+t
    { "key": "cmd+t",      "command": "workbench.action.terminal.new"  , "when": "terminalFocus"  },
    { "key": "ctrl+shift+`",    "command": "-workbench.action.terminal.new"  },  //( 解绑原生的 ctrl+shift+`）
    // 去前一屏终端（终端编号-1）
    { "key": "cmd+alt+up",    "command": "workbench.action.terminal.focusPrevious", "when": "terminalFocus" },
    // 去后一屏终端（终端编号+1）
    { "key": "cmd+alt+down",    "command": "workbench.action.terminal.focusNext" , "when": "terminalFocus"},
    // 去左一窗终端
    // { "key": "cmd+alt+left",    "command": "workbench.action.terminal.focusPreviousPane", "when": "terminalFocus" },
    // 去右一窗终端
    // { "key": "cmd+alt+right",    "command": "workbench.action.terminal.focusNextPane", "when": "terminalFocus" },
    // 终端左右分窗: cmd+\
    // 终端上下分窗：vscode不支持

    // 终端下(含vim)的键盘映射：完全仿照我的iterm2的设置
    // https://code.visualstudio.com/docs/editor/integrated-terminal#_send-text-from-a-keybinding
    // 参见https://github.com/xtermjs/xterm.js/blob/0e45909c7e79c83452493d2cd46d99c0a0bb585f/src/common/data/EscapeSequences.ts#L31
    // 左移一词：alt+left
    { "key": "alt+left",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001bb" }, "when": "terminalFocus" },
    // 右移一词：alt+right
    { "key": "alt+right",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001bf" }, "when": "terminalFocus" },
    // 移动到行首：shift+alt+left  or  cmd+left
    { "key": "cmd+left",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001b[H" }, "when": "terminalFocus" },
    // 移动到行尾：shift+alt+right or  cmd+right
    { "key": "cmd+right",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001b[F" }, "when": "terminalFocus" },
    // 左删一词：alt+backspace
    { "key": "alt+backspace",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001b\u007f" },  "when": "terminalFocus"  },
    // 右删一词：alt+delete
    { "key": "alt+delete",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u001bd" },  "when": "terminalFocus"  },
    // 删除到行首：shift+alt+backspace or cmd+backspace
    { "key": "cmd+backspace",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u0015" },  "when": "terminalFocus"  },
    // 删除到行尾：shift+alt+delete    or cmd+delete
    { "key": "cmd+delete",   "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u000b" },  "when": "terminalFocus"  },
    // 删除整行： shift+backspace
    { "key": "shift+backspace", "command": "workbench.action.terminal.sendSequence", "args": { "text": "\u0005\u0015" }, "when": "terminalFocus" },

    // ----------------------------------------------------------------------------------------------
    // 编辑窗口
    // ----------------------------------------------------------------------------------------------

    // 代码折叠
    // Command + option + [  // 折叠一层 光标所在代码块
    // Command + option + ]  // 展开一层 光标所在代码块
    // command + k + 0，折叠所有代码块  0是代码折叠级别，同理可以换用1，2，3 等
    // command + k + j，展开所有代码块。

    // 非注释的 左右 大中小括号 之间跳转： ctrl + \
    { "key": "ctrl+\\", "command": "editor.action.jumpToBracket", "when": "editorTextFocus" },

    // alt+z  光标退回  可以是选区, 当前文件内 两步编辑之间
    // { "key": "alt+z", "command": "cursorUndo", "when": "textInputFocus" },
    // { "key": "cmd+u", "command": "-cursorUndo", "when": "textInputFocus" },
    // // shift+alt+z 光标前进  可以是选区, 当前文件内 两步编辑之间
    // { "key": "shift+alt+z", "command": "cursorRedo" },




    // 跨越自动换行
    // cmd+左 移动到当前文本行的行首
    {"key": "cmd+right","command": "cursorLineEnd","when": "textInputFocus"    },
    {"key": "ctrl+e","command": "-cursorLineEnd","when": "textInputFocus"    },
    // cmd+右 移动到当前文本行的行尾
    {"key": "cmd+left","command": "cursorLineStart","when": "textInputFocus"    },
    {"key": "ctrl+a","command": "-cursorLineStart","when": "textInputFocus"    },
    // cmd+shift+左 选中到当前文本行的行首
    {"key": "shift+cmd+left","command": "cursorLineStartSelect","when": "textInputFocus"    },
    {"key": "ctrl+shift+a","command": "-cursorLineStartSelect","when": "textInputFocus"    },
    // cmd+shift+右 选中到当前文本行的行尾
    {"key": "shift+cmd+right","command": "cursorLineEndSelect","when": "textInputFocus"    },
    {"key": "ctrl+shift+e","command": "-cursorLineEndSelect","when": "textInputFocus"    },

    // 不跨越自动换行
    // home（fn+左）  移动到当前显示行的行首
    // end（fn+右）  移动到当前显示行的行尾
    // shift+ctrl+left    选中到当前显示行的行首 // 因为home是功能键，不能再用shift修饰，故无法设置成shift+home
    {"key": "shift+ctrl+left","command": "cursorHomeSelect","when": "textInputFocus"    },
    {"key": "shift+cmd+left","command": "-cursorHomeSelect","when": "textInputFocus"    },
    // shift+ctrl+right    选中到当前显示行的行尾 // 因为end是功能键，不能再用shift修饰，故无法设置成shift+end
    {"key": "shift+ctrl+right","command": "cursorEndSelect","when": "textInputFocus"    },
    {"key": "shift+cmd+right","command": "-cursorEndSelect","when": "textInputFocus"    },



    // // ⌃Z : 光标退回 可以是选区, 跨文件 跨若干步编辑
    { "key": "alt+z", "command": "-editor.action.toggleWordWrap" },
    { "key": "alt+z", "command": "workbench.action.navigateBack" },
    { "key": "ctrl+-", "command": "-workbench.action.navigateBack" },
    { "key": "alt+z", "command": "workbench.action.quickInputBack", "when": "inQuickOpen" },
    { "key": "ctrl+-", "command": "-workbench.action.quickInputBack", "when": "inQuickOpen" },
    // ⇧⌃Z : 跨文件 光标前进 可以是选区, 跨文件 跨若干步编辑
    { "key": "alt+shift+z", "command": "workbench.action.navigateForward" },
    { "key": "ctrl+shift+-",  "command": "-workbench.action.navigateForward" },

    // 代码左右: cmd+\
    // 上下分窗
    { "key": "shift+cmd+\\", "command": "workbench.action.splitEditorOrthogonal", "when": "editorTextFocus" },
    { "key": "shift+cmd+\\", "command": "-editor.action.jumpToBracket", "when": "editorTextFocus" },
    // 最大化当前窗口
    { "key": "shift+cmd+enter", "command": "workbench.action.toggleEditorWidths", "when": "editorTextFocus" },

    // cmd+c 复制一行, 不带行尾换行符, 依赖于'macros'插件terminalFocus; 之后 cmd+v 则粘贴插入到光标所在处
    { "key": "cmd+c", "command": "macros.copyWithoutNewLine", "when": "editorTextFocus && !editorHasSelection" },
    // cmd+alt+c 复制一行, 带行尾换行符; 之后 cmd+v 则粘贴到光标上一行
    { "key": "cmd+alt+c", "command": "editor.action.clipboardCopyAction", "when": "editorTextFocus && !editorHasSelection" },
    { "key": "cmd+c", "command": "-editor.action.clipboardCopyAction", "when": "editorTextFocus && !editorHasSelection" },
    // 选择一行, 不带行尾换行符, 依赖于'macros'插件terminalFocus
    { "key": "cmd+l", "command": "macros.selectWithoutNewLine", "when": "editorTextFocus && !editorHasSelection" },
    { "key": "cmd+l", "command": "-expandLineSelection", "when": "textInputFocus" },

    // 删除整行： shift+backspace
    { "key":  "shift+backspace",  "command": "editor.action.deleteLines",  "when": "textInputFocus && !editorReadonly" },
    { "key": "shift+cmd+k", "command": "-editor.action.deleteLines", "when": "textInputFocus && !editorReadonly" },


    // 多选区、多光标功能：
        // alt+cmd+C/W/R：  开关Case sensitive/whole word/RegEx

        // 选中一个区域再cmd+d：非整词匹配
        // 光标在一个词中未选中一片区域，直接cmd+d：整词匹配
        // 选中下一个和当前一样的：cmd+d

        // 各功能同上, 但选中[前]一个和当前一样的：cmd+K cmd+d
        { "key": "cmd+k cmd+d", "command": "editor.action.addSelectionToPreviousFindMatch" ,"when": "editorFocus" },

        // ctrl+d 取消当前选区, 去往下一选区
        { "key": "ctrl+d", "command": "editor.action.moveSelectionToNextFindMatch", "when": "editorFocus" },
        { "key": "cmd+k cmd+d", "command": "-editor.action.moveSelectionToNextFindMatch", "when": "editorFocus" },
        // shift+ctrl+d 取消当前选区, 回到上一选区
        { "key": "shift+ctrl+d", "command": "cursorUndo", "when": "textInputFocus" },

        // shift+cmd+d: 选中所有和当前一样的
        { "key": "shift+cmd+d",    "command": "editor.action.selectHighlights", "when": "editorFocus" },

        // 新增一个选区：按住alt，用鼠标选中区域
        // 新加一个光标：按住alt点鼠标左键

        // 已经选中一/多个选区:
            // alt+shitf+鼠标左键: 现有选区每一行末尾, 转换为多光标(无选区)
            // cmd+l 所有选区转换行尾处 转换为多光标
            { "key": "cmd+shift+l", "command": "editor.action.insertCursorAtEndOfEachLineSelected", "when": "editorTextFocus  && editorHasSelection" },
            { "key": "cmd+shift+l", "command": "-editor.action.selectHighlights", "when": "editorFocus" },
            { "key": "shift+alt+i", "command": "-editor.action.insertCursorAtEndOfEachLineSelected", "when": "editorTextFocus" },
        // 不论有木有未选中区域,  alt+shitf+鼠标选中区域: 取消之前的选中, 将此次鼠标选区每一行转换为多光标(无选区)

        // 上/下行加一个光标：alt+cmd+上/下, 若有行长度不到这列, 仍增加新光标于行尾

    // 列选择: 选择多行的数列, 若有行长度不到这列, 则跳过此行不选
        // shift+alt+左/右: 开启列选择, 水平移动光标以扩大选区
        // shift+alt+左/右: 开启列选择, 上下添加光标
        // 左/右: 列选择变成多光标, 光标就在各行选区的尾巴

    // shift+cmd+[ / ] : 左/右一个标签页
    // shift+ctrl+右: 智能缩小选区
    // shift+ctrl+左: 智能扩大选区


    // ----------------------------------------------------------------------------------------------
    // 编辑窗口
    // ----------------------------------------------------------------------------------------------
    // 调试 （[t]iaoshi）
    { "key": "shift+alt+cmd+t",    "command": "workbench.view.debug"},
    // 打开最近关闭的文件（[l]ast）
    { "key": "shift+alt+cmd+l",  "command": "workbench.action.reopenClosedEditor" },


    // ----------------------------------------------------------------------------------------------
    // remote developement
    // ----------------------------------------------------------------------------------------------
    // 当远程服务器断开连接时, 按cmd+r来重新连接当前window到远程服务器
    { "key": "cmd+r", "command": "workbench.action.reloadWindow" },
    { "key": "cmd+r", "command": "-workbench.action.reloadWindow", "when": "isDevelopment" },



    // ----------------------------------------------------------------------------------------------
    // latex workshop
    // ----------------------------------------------------------------------------------------------
    // alt+cmd+V : open pdf viewer
    // alt+cmd+shitf+B : Build with a recipe to select
    // alt+cmd+B : Build with the last used recipe
    // alt+cmd+C : clean auxiliary files
    // alt+cmd+Q : stop building
    // alt+cmd+J : code jump to pdf
    // cmd+single fingre click: pdf jump to code
    {  "key": "cmd+alt+shift+b", "command": "latex-workshop.recipes" },
    {
        "key": "alt+cmd+q",
        "command": "latex-workshop.kill"
    },

    // 自动补全
    {
        "key": "cmd+down",
        "command": "editor.action.inlineSuggest.acceptNextLine",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "ctrl+down",
        "command": "-editor.action.inlineSuggest.acceptNextLine",
        "when": "inlineSuggestionVisible"
    },


    // Markdown all in one 插件的快捷键
    {
        "key": "alt+s",
        "command": "markdown.extension.editing.toggleStrikethrough",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "alt+s",
        "command": "-markdown.extension.editing.toggleStrikethrough",
        "when": "false"
    },

    // {
    //     "key": "alt+cmd+b",
    //     "command": "markdown.extension.editing.toggleMathReverse",
    //     "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    // },
    // 行内代码：将选中文本添加/解除格式
    {
        "key": "ctrl+c",
        "command": "markdown.extension.editing.toggleCodeSpan",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },

    // quote
    {
        "key": "cmd+alt+q",
        "command": "macros.markdownQuoteSelectedLines",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    // task list
    {
        "key": "cmd+alt+x",
        "command": "macros.markdownInsertTaskListSelectedLines",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    // 勾选/勾除 task list
    {
        "key": "ctrl+x",
        "command": "markdown.extension.checkTaskList",
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    {
        "key": "alt+c",
        "command": "-markdown.extension.checkTaskList",
        "when": "false"
    },
    // 插入代码块：只能添加格式，不能去除格式，支持下拉框选择编程语言
    {
        "key": "alt+cmd+c",
        "command": "editor.action.insertSnippet",
        "args": { "name": "Insert fenced code block"},
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    // {
    //     "key": "alt+cmd+c",
    //     "command": "markdown.extension.editing.toggleCodeBlock",
    //     "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    // },
    // 插入公式块：只能添加格式，不能去除格式，支持下拉框选择编程语言
    {
        "key": "alt+cmd+b",
        "command": "editor.action.insertSnippet",
        "args": { "name": "Insert fenced math"},
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
    //
    {
        "key": "ctrl+m",
        "command": "editor.action.insertSnippet",
        "args": { "name": "Insert inline math"},
        "when": "editorTextFocus && !editorReadonly && editorLangId =~ /^markdown$|^rmd$|^quarto$/"
    },
]